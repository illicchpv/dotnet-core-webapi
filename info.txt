0014 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0013 - –≤—Å—Ç—Ä–∞–∏–≤–∞–µ–º react-cdn –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –±–µ–∑ npm, node_modules, package.json...

—Å –≤–∏–¥–µ–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –Ω–∞–∫–ª–∞–¥–∫–∞. —Å 23 –º–∏–Ω—É—Ç—ã —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏ —Ç–æ —á—Ç–æ –Ω–∞–¥–æ –±—ã–ª–æ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–æ—Å—å. 
–ù–æ —Ç–∞–º –æ—Å–æ–±–æ –Ω–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –Ω–µ—Ç, –Ω–∞–≤–æ–∂—É "–∫—Ä–∞—Å–æ—Ç—É" –∏ –¥–æ–±–∞–≤–ª—è—é –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 
–∏—Å–ø–æ–ª—å–∑—É—è useState.

react, reactjs, cdn, static page,Razor pages, WebApi, CSharp


0013 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0012 - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á–∏ - Razor pages + dotnet core webApi project

OnGet, OnPost, Mvc.TagHelpers,Razor pages,Validation,FluentValidation,static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

–ü—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã–π –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á–∏ (—Å.–º. 0012) –º–µ—Ç–æ–¥, —Å –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–≤–æ–ª—å–Ω–æ —É–¥–æ–±–µ–Ω –∏ –ø—Ä–æ—Å—Ç, 
–Ω–æ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö, –ø—Ä–æ—Å—Ç—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü. –¢.–∫. 
–ø—Ä–∏ –≤—Å—è–∫–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä –≤—ã–±—Ä–∞–Ω –¥—Ä—É–≥–æ–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å) 
–∏–¥—ë—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤—Å—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞.
–ë–æ–ª—å—à–æ–π —Ç—Ä–∞—Ñ–∏–∫ –∏ –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.

–∏—Å—Ö–æ–¥–Ω–∏–∫–∏:
https://github.com/illicchpv/dotnet-core-webapi

================================================
0012 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0011 - –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ Razor pages + dotnet core webApi project

–∏—Å—Ö–æ–¥–Ω–∏–∫–∏:
https://github.com/illicchpv/dotnet-core-webapi


================================================
0011 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0010 - Razor pages + dotnet core webApi project
Razor pages,Validation,FluentValidation,refactoring,static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

builder.Services.AddRazorPages();
...
app.UseRouting();
app.MapRazorPages();

app.AddEndPointsProduct();

app.Run();

--- pages index.cshtml
@page
@model IndexModel
@{
    ViewData["Title"] = "Index page";
}
@section atHeaderEnd {
    <link href="~/css/index1.css" rel="stylesheet">
}
@* ----------------üëá-–ø–æ–ø–∞–¥—ë—Ç RenderBody-------------- *@
... 

<p>@IndexModel.getAplusB(101, 201)</p>
...
--- pages _ViewImports.cshtml
@using TestClass_namespace
--- pages _ViewStart.cshtml
@{ Layout = "shared/_layout"; }
--- pages/shared/_layout.cshtml
    @RenderSection("atHeaderEnd", required: false)
    @RenderBody()

================================================
0010 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0009 - –í–û–ó–í–†–ê–¢ –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É dotnet core webApi project

Validation,FluentValidation,refactoring,static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

—Å–º. [0009 –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0008 - validation dotnet core webApi project](https://youtu.be/HwjjxQre3-g)

–æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –Ω–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
—É–±—Ä–∞–ª –º—É—Å–æ—Ä.
–≥–æ—Ç–æ–≤–ª—é –ø—Ä–æ–µ–∫—Ç –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü 
/Razor Pages/

================================================
–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0008 - validation dotnet core webApi project
validation dotnet core FluentValidation+

Validation,FluentValidation,refactoring,static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

FluentValidation.AspNetCore

public class ProductValidator : AbstractValidator<Product>
{
    public ProductValidator()
    {
        RuleFor(x => x.Name).NotEmpty().MaximumLength(8).MinimumLength(4)
            .Must(nam => Regex.IsMatch(nam, "^[A-Z–ê-–Ø][a-z–∞-—è]+$"))
            .WithMessage("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 4 –∏ –Ω–µ –±–æ–ª—å—à–µ 8 –±—É–∫–≤ –∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π.");
        RuleFor(x => x.Price).GreaterThan(10).WithMessage("–¢–æ–ª—å–∫–æ –ó–∞ –¥–µ–Ω—å–≥–∏ (>10) –¥–∞");
        RuleFor(x => x.BuyerEmail).EmailAddress().WithMessage("–ò–Ω–≤–∞–ª–∏–¥–Ω—ã–∏ÃÜ Email");
    }
    ...

builder.Services.AddValidatorsFromAssemblyContaining(typeof(ProductValidator));

app.MapPost("/product", async (IValidator<Product> validator, [FromBody] Product _product, InMemoryDbContext context) =>
...
    var validation = await validator.ValidateAsync(product);
    if (!validation.IsValid)
        return Results.ValidationProblem(validation.ToDictionary());


–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0007 - refactoring dotnet core webApi project

refactoring,static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

{
    var src = Path.Combine(Directory.GetCurrentDirectory(), "www_root");
    var dst = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot");
    if (Directory.Exists(dst)) Directory.Delete(dst, true);
    Directory.Move(src, dst);
}
// ---------------UseDefaultFiles-------------------------------------------
{
    DefaultFilesOptions options = new DefaultFilesOptions();
    options.DefaultFileNames.Clear();
    options.DefaultFileNames.Add("index.html");
    app.UseDefaultFiles(options);
}

EndPointsProduct.cs
public static class EndPointsProduct
{

    public static void AddEndPointsProduct(this WebApplication app)
    {
      ...

–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0006 - static files in dotnet core webApi in IIS server
static files,serilog,publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

  &lt;ItemGroup&gt;
    &lt;None Update="www_root\*.html"&gt;
      &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
    &lt;/None&gt;
    &lt;None Update="www_root\img\*.png"&gt;
      &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
    &lt;/None&gt;
    &lt;None Update="www_root\js\*.js"&gt;
      &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
    &lt;/None&gt;
    &lt;None Update="www_root\css\*.css"&gt;
      &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
    &lt;/None&gt;
  &lt;/ItemGroup&gt;

using Microsoft.Extensions.FileProviders;

var cacheMaxAgeSec = 60 * 60 * 24 * 7; // 60s * 60m * 24h * 7d - –Ω–µ–¥–µ–ª—è
app.UseStaticFiles(new StaticFileOptions{
    FileProvider = new PhysicalFileProvider(Path.Combine(Directory.GetCurrentDirectory(), "www_root")),
    RequestPath = "",
    OnPrepareResponse = ctx =&gt;
    {
        ctx.Context.Response.Headers.Append(
                "Cache-Control", $"public, max-age={cacheMaxAgeSec}");
    },
});


https://serilog.net
	Flexible, structured events ‚Äî log file convenience.

Directory.SetCurrentDirectory(Path.GetDirectoryName(Environment.ProcessPath) ?? "");

add package:
	Serilog
	Serilog.Extensions.Logging
	Serilog.Settings.Configuration
	Serilog.Sinks.Console
	Serilog.Sinks.File

    "Serilog": {
        "Using": [ "Serilog.Sinks.File" ],
        "MinimumLevel": { "Default": "Information" },
        "WriteTo": [
            { "Name": "Console" },
            {
                "Name": "File",
                "Args": {
                    "path": "./logs/log_.txt",
                    "rollingInterval": "Day",
                    "rollingIntervalValues": "Day Hour Minute",
                    "outputTemplate": "{Timestamp:HH:mm:ss.fff} [{Level:u3}] {Message:lj}{NewLine}{Exception}",
                    "shared": true
                }
            }
        ]
    },

// Configure Logging:
using var logger = new LoggerConfiguration()
    .ReadFrom.Configuration(builder.Configuration)
    .Enrich.FromLogContext()
    .CreateLogger();
builder.Logging.ClearProviders();
builder.Logging.AddSerilog(logger);
Log.Logger = logger;
-----------------------------------------------------------------------

–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0004 - publish dotnet core webApi in IIS server
–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ 0004 - —Å–æ–∑–¥–∞–Ω–∏–µ  .NET core WebApi + In Memory EntityFramework, get post
publish,iis,VSCode,dotnet,EntityFramework,InMemory,CSharp,git,HttpClient,REST,WebApi,vscode-solution-explorer,Codeium

EfWebApiSln

—Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
http://localhost:5022/swagger/index.html

–ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞–¥–æ —Å–∫–∞—á–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å -
ASP.NET Core 8.0 Runtime (v8.0.6) - Windows Hosting Bundle Installer
https://dotnet.microsoft.com/en-us/download/dotnet/thank-you/runtime-aspnetcore-8.0.6-windows-hosting-bundle-installer



dotnet new gitignore
git init
add new project - –í–µ–±-API ...
    dotnet new --list 
    dotnet new "webapi" -lang "C#" -n "TestWebApi" -o "TestWebApi"
----
edit launchSettings.json  - "launchBrowser": false,

- —Å–æ–∑–¥–∞—Ç—å –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É In Memory Database
  TestWebApi: Install the EF Core packages  Microsoft.EntityFrameworkCore.InMemory

  creating a context class representing the session with the database 
    public class InMemoryDbContext : DbContext
    {
      public DbSet<Product> Products { get; set; }

      public InMemoryDbContext(DbContextOptions<InMemoryDbContext> options): base(options)
      { Database.EnsureCreated();   // —Å–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏
      }

      –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–± –±–∞–∑–∞ –±—ã–ª–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ –ø—É—Å—Ç–∞—è –≤ InMemoryDbContext –¥–æ–±–∞–≤–∏–º
      protected override void OnModelCreating(ModelBuilder modelBuilder)
      {
        modelBuilder.Entity<Product>().HasData(
          new Product { Id = 1, Name = "–∑–µ–ª–µ–Ω—å", Price = 37 },
          new Product { Id = 2, Name = "–æ–≤–æ—â–∏ ", Price = 41 },
        );
      }
    }

  builder.Services.AddDbContext<InMemoryDbContext>(options =>options.UseInMemoryDatabase("InMemoryDb"));
  
  app.MapPost("/product", ([FromBody] Product _product, InMemoryDbContext context) => ...

==========================================
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:
  Visual Studio Code

https://dotnet.microsoft.com/en-us/download/dotnet/sdk-for-vs-code?utm_source=vs-code&amp;utm_medium=referral&amp;utm_campaign=sdk-install
  dotnet

–ø–ª–∞–≥–∏–Ω—Å
  C# Dev Kit
  C# for Visual Studio Code /Base language support for C#
  .NET Install Tool
  REST Client
  vscode-solution-explorer
  Codeium: AI Coding
  ? IntelliCode for C# Dev Kit

- dotnet commands:
    >dotnet --version
    >dotnet --info
    >dotnet -h new
    >dotnet new gitignore

create solution
  >dotnet new sln -n "MyWebApi"


–ù–∞ –æ—Å–Ω–æ–≤–µ:
  VS Code Tutorial For C# Developers
  https://www.youtube.com/watch?v=O4dCgYicoDg
